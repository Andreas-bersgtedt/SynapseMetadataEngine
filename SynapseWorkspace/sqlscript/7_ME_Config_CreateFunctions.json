{
	"name": "7_ME_Config_CreateFunctions",
	"properties": {
		"folder": {
			"name": "Run Me 1st"
		},
		"content": {
			"query": "CREATE FUNCTION [ME_Config].[fnGetDatatypedeff] (@DataSetType [VARCHAR](50),@DataType [VARCHAR](500),@Size [VARCHAR](20),@Precision [VARCHAR](20),@SCALE [VARCHAR](20)) RETURNS VARCHAR(500)\nAS\nBEGIN\n    -- Declare the return variable\n\tDECLARE @DATATYPEDEFF VARCHAR(500)\n\t\n/*Datatype Definition for Microsoft SQL Datatypes*/\n\n\nIF @DataSetType = 'MSSQL'\nSET @DATATYPEDEFF =(\n/*SELECT*/\tCASE\tWHEN\t@DataType LIKE '%INT%' or\n\t\t\t\t\t\t@DataType LIKE 'bit' or\n\t\t\t\t\t\t--@DataType LIKE 'xml' or\n\t\t\t\t\t\t@DataType LIKE 'uniqueidentifier' or\n\t\t\t\t\t\t@DataType LIKE '%money%' or\n\t\t\t\t\t\t@DataType LIKE 'real' or\n\t\t\t\t\t\t(@DataType = 'float' and @Precision='53')\n\n\t\t\t\tTHEN\t@DataType\n\t\t\t\tWHEN\t@DataType IN\t(\n\t\t\t\t\t\t\t\t\t\t'DECIMAL'\n\t\t\t\t\t\t\t\t\t\t,'DEC'\n\t\t\t\t\t\t\t\t\t\t,'numeric'\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\tTHEN\t@DataType + '('+@Precision+','+@SCALE+')'\n\t\t\t\t\n\t\t\t\tWHEN\t@DataType LIKE '%var%' and @DataType != 'sql_variant'\n\t\t\t\tTHEN\t@DataType + '('+CASE WHEN @Size=-1 or @Size > 4000 Then 'MAX' ELSE @Size END + ')'\n\n\t\t\t\tWHEN\t@DataType IN\t(\n\t\t\t\t\t\t\t\t\t\t'datetime'\n\t\t\t\t\t\t\t\t\t\t,'date'\n\t\t\t\t\t\t\t\t\t\t,'smalldatetime'\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\tTHEN\t@DataType \n\t\t\t\tWHEN\t@DataType IN\t(\n\t\t\t\t\t\t\t\t\t\t'time'\n\t\t\t\t\t\t\t\t\t\t,'datetime2'\n\t\t\t\t\t\t\t\t\t\t,'datetimeoffset'\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\tTHEN\t@DataType + '('+@SCALE+')'\n\t\t\t\tWHEN    @DataType LIKE 'xml'\n\t\t\t\tTHEN\t'VARCHAR(MAX)'\n\t\t\t\tELSE\t@DataType + '('+@Size+')'\n\t\tEND\n)\n\n/*Datatype Definition for Oracle SQL Datatypes*/\nIF @DataSetType = 'ORACLE'\nSET @DATATYPEDEFF = @DataType + '('+@Size+')'\n\n/*Datatype Definition for MySQL Datatypes*/\nIF @DataSetType Like '%MySQL'\nSET @DATATYPEDEFF = (\n\t\t\t\t\t\tCASE\t\n\t\t\t\t\t\t\t/*Integer*/\n\t\t\t\t\t\t\tWHEN\t(@DataType LIKE '%INT%' AND @DataType !='MEDIUMINT')  \n\t\t\t\t\t\t\tTHEN\t@DataType\n\t\t\t\t\n\t\t\t\t\t\t\tWHEN\t@DataType ='MEDIUMINT'\n\t\t\t\t\t\t\tTHEN\t'INT'\n\t\t\t\t\t\t\t/*Decimal*/\n\t\t\t\t\t\t\tWHEN\t@DataType =\t'DECIMAL' and @Precision <= 38\n\t\t\t\t\t\t\tTHEN\t@DataType + '('+@Precision+','+@SCALE+')'\n\t\t\t\t\n\t\t\t\t\t\t\tWHEN\t@DataType =\t'DECIMAL' and @Precision > 38\n\t\t\t\t\t\t\tTHEN\t'FLOAT '\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t/*Floating Point*/\n\t\t\t\t\t\t\tWHEN\t@DataType IN ('DOUBLE','REAL')\n\t\t\t\t\t\t\tTHEN\t'float(53)'\n\n\t\t\t\t\t\t\tWHEN\t@DataType ='FLOAT' AND ISNULL(@SCALE,-1) > 0\n\t\t\t\t\t\t\tTHEN\t'float(24)'\n\t\t\t\t\t\t\tWHEN\t@DataType ='FLOAT' AND ISNULL(@SCALE,-1) <= 0\n\t\t\t\t\t\t\tTHEN\t'float('+@Precision+')'\n\n\t\t\t\t\t\t\tWHEN\t(@DataType LIKE '%char' OR @DataType LIKE '%TEXT')\n\t\t\t\t\t\t\tTHEN\t@DataType + '('+CASE WHEN @Size=-1 or @Size > 4000 Then 'MAX' ELSE @Size END + ')'\n\n\t\t\t\t\t\t\tWHEN\t@DataType IN\t(\n\t\t\t\t\t\t\t\t\t\t\t\t\t'date'\n\t\t\t\t\t\t\t\t\t\t\t\t\t,'time'\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\tTHEN\t@DataType \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tWHEN\t@DataType = 'DATETIME'\n\t\t\t\t\t\t\tTHEN\t'datetime2'\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tWHEN\t@DataType = 'TIMESTAMP'\n\t\t\t\t\t\t\tTHEN\t'smalldatetime'\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tWHEN\t@DataType = 'YEAR'\n\t\t\t\t\t\t\tTHEN\t'smallint'\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tWHEN    @DataType LIKE 'xml'\n\t\t\t\t\t\t\tTHEN\t'VARCHAR(MAX)'\n\n\t\t\t\t\t\t\tWHEN    (@DataType LIKE '%BINARY' OR @DataType LIKE '%BLOB')\n\t\t\t\t\t\t\tTHEN    'varbinary'+ '('+CASE WHEN @Size=-1 or @Size > 4000 Then 'MAX' ELSE @Size END + ')'\n\n\t\t\t\t\t\t\tELSE\t@DataType + '('+@Size+')'\n\t\t\t\t\t\tEND\n\t\t\t\t\t)\n\n    -- Return the result of the function\n    RETURN @DATATYPEDEFF\nEND\nGO\n\nCREATE FUNCTION [ME_Config].[fnGetRMDBSQuery] (@DataSetID [VARCHAR](20),@DataSetName [VARCHAR](250),@SchemaName [VARCHAR](250),@DataSetType [VARCHAR](100)) RETURNS VARCHAR(4000)\nAS\nBEGIN\n    -- Declare the return variable\n    DECLARE @Query VARCHAR(MAX)\n\n    -- T-SQL statements to compute the return value\nIF @DataSetType IN ('MSSQL','MYSQL','AzMYSQL') SET @Query ='\nSELECT\t¬Dynamic¬ AS MetadataQuerySource\n\t\t,TABLE_NAME AS MetadataEntityName\n\t\t,TABLE_SCHEMA AS MetadataSchemaName\n\t\t,COLUMN_NAME AS MetadataObjectName\n\t\t,DATA_TYPE AS MetadataObjectType\n\t\t,CHARACTER_MAXIMUM_LENGTH AS MetadataObjectlength\n\t\t,FLOOR(NUMERIC_PRECISION) AS MetadataObjectPrecision\n\t\t,FLOOR(NUMERIC_SCALE) AS MetadataObjectScale\n\t\t,COALESCE(COLLATION_NAME,¬¬) AS MetadataObjectCollation\n\t\t,¬<DataSetID>¬ AS DataSetID\n\t\t,FLOOR(ORDINAL_POSITION) AS MetadataObjectOrder\n\t\t,¬0¬ AS MetadataObjectIdentityFlag\n\t\t,'+CASE WHEN @DataSetType IN ('MYSQL','AzMYSQL') THEN 'utc_timestamp()' ELSE 'GETUTCDATE()' END +' AS MetadataObjectRefreshUTCTimeStamp\n\t\t\t\t\nFROM\tINFORMATION_SCHEMA.COLUMNS\nWHERE\tTABLE_NAME = ¬<DataSetName>¬\n\t\tAND TABLE_SCHEMA = ¬<SchemaName>¬';\n    -- T-SQL statements to compute the return value\n\t-- do we want CHAR_LENGTH or DATA_LENGTH ???\nIF @DataSetType IN ('ORACLE') SET @Query ='\nSELECT\t¬Dynamic¬               AS \"MetadataQuerySource\"\n\t\t,TABLE_NAME             AS \"MetadataEntityName\"\n\t\t,OWNER                  AS \"MetadataSchemaName\"\n\t\t,COLUMN_NAME            AS \"MetadataObjectName\"\n\t\t,DATA_TYPE              AS \"MetadataObjectType\"\n\t\t,CHAR_LENGTH            AS \"MetadataObjectlength\"\n\t\t,FLOOR(DATA_PRECISION)  AS \"MetadataObjectPrecision\"\n\t\t,FLOOR(DATA_SCALE)      AS \"MetadataObjectScale\"\n\t\t,COALESCE(COLLATION,¬¬) AS \"MetadataObjectCollation\"\n\t\t,¬<DataSetID>¬          AS \"DataSetID\"\n\t\t,FLOOR(COLUMN_ID)       AS \"MetadataObjectOrder\"\n\t\t,¬0¬                    AS \"MetadataObjectIdentityFlag\"\n\t\t,'+CASE WHEN @DataSetType IN ('ORACLE') THEN 'LOCALTIMESTAMP AT TIME ZONE ¬UTC¬' END +' AS \"MetadataObjectRefreshUTCTimeStamp\"\n\t\t\t\t\nFROM\tALL_TAB_COLUMNS\nWHERE\tTABLE_NAME = ¬<DataSetName>¬\n\t\tAND OWNER = ¬<SchemaName>¬';\nSET @Query=REPLACE(@Query,'¬','''')\nSET @Query=REPLACE(@Query,'<DataSetID>',@DataSetID)\nSET @Query=REPLACE(@Query,'<DataSetName>',@DataSetName)\nSET @Query=REPLACE(@Query,'<SchemaName>',@SchemaName)\n\n    -- Return the result of the function\n    RETURN @Query\n\n\t\nEND\nGO\n\nCREATE FUNCTION [ME_Config].[fnGetConfigurationSQLQuery] (@ConnectionType [VARCHAR](50),@ConnectionId [bigint]) RETURNS VARCHAR(500)\nAS\nBEGIN\n    -- Declare the return variable\n\tDECLARE @SQLQUERY VARCHAR(500)\n\n/*Datatype Definition for Microsoft SQL Datatypes*/\nIF @ConnectionType in ('MSSQL','MYSQL','AzMYSQL')\nBEGIN\n  SET @SQLQUERY = 'SELECT ''' + @ConnectionType + ''' AS DataSetType,  ' +\n                          '''999''                    AS RunGroupCode, ' +\n                          'TABLE_NAME                 AS DataSetName,  ' +\n                          'TABLE_SCHEMA               AS SchemaName,   ' +\n                          '''RAW''                    AS TargetLake,   ' +\n                          '''' + cast(@ConnectionId as varchar) + '''  AS ConnectionId, ' +\n                          '0                          AS IsEnabled ' +\n                  ' FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = ''BASE TABLE'''\n  IF @ConnectionType LIKE '%MYSQL'\n    SET @SQLQUERY += ' AND TABLE_SCHEMA NOT IN (''mysql'',''performance_schema'',''sys'')'\nEND\nELSE IF @ConnectionType = 'ORACLE'\nBEGIN\n  SET @SQLQUERY = REPLACE(\t'SELECT ¬' + @ConnectionType + '¬ AS DataSetType,  ' +\n\t\t\t\t\t\t\t'CAST(¬999¬ as int)\t\t\tAS RunGroupCode, ' +\n\t\t\t\t\t\t\t'TABLE_NAME                 AS DataSetName,  ' +\n\t\t\t\t\t\t\t'OWNER                      AS SchemaName,   ' +\n\t\t\t\t\t\t\t'¬RAW¬\t\t\t\t\t\tAS TargetLake,   ' +\n\t\t\t\t\t\t\t'CAST(¬' + cast(@ConnectionId as varchar) + '¬ as int)  AS ConnectionId, ' +\n\t\t\t\t\t\t\t'CAST(0 as int)\t\t\t\tAS IsEnabled ' +\n\t\t\t\t\t\t\t' FROM ALL_TABLES WHERE TABLESPACE_NAME NOT IN (¬SYSTEM¬, ¬SYSAUX¬)'\n\t\t\t\t\t\t,'¬','''')\nEND\t\t\t\t\t\t\t\nELSE\n  SET @SQLQUERY = ''\n\n-- Return the result of the function\nRETURN @SQLQUERY\nEND\nGO\n\n\n",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"poolName": "mesqldw",
				"databaseName": "mesqldw"
			}
		},
		"type": "SqlQuery"
	}
}