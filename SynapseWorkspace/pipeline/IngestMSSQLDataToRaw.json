{
	"name": "IngestMSSQLDataToRaw",
	"properties": {
		"activities": [
			{
				"name": "GetConfigurations",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlPoolSource",
						"sqlReaderStoredProcedureName": "[ME_Data].[sp_GetDynamicMSSQLQuery]",
						"storedProcedureParameters": {
							"DataSetType": {
								"type": "String",
								"value": "MSSQL"
							},
							"ExecutionGroup": {
								"type": "String",
								"value": "1"
							},
							"ExecutionPlane": {
								"type": "String",
								"value": "A"
							}
						}
					},
					"dataset": {
						"referenceName": "me_config_dataset_sqlTable",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "FE_Execute_SQL_Pipeline",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "GetConfigurations",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('GetConfigurations').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "Execute Generic Pipeline",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "SQLtoParquet",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"SqlServerName": {
										"value": "@{item().DBServerName}",
										"type": "Expression"
									},
									"SqlDatabaseName": {
										"value": "@{item().DBName}",
										"type": "Expression"
									},
									"SQLKVName": {
										"value": "@{item().SQLKVName}",
										"type": "Expression"
									},
									"SqlUserName": {
										"value": "@{item().SqlUserName}",
										"type": "Expression"
									},
									"SQLQuery": {
										"value": "@{item().SQLQuery}",
										"type": "Expression"
									},
									"DLContainer": {
										"value": "@{item().DLContainer}",
										"type": "Expression"
									},
									"DLPath": {
										"value": "@{item().DLFolder}",
										"type": "Expression"
									},
									"DLFileName": {
										"value": "@{item().DLFileName}",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "ME_Stage_InsertDatageEntry",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Execute Generic Pipeline",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[ME_Stage].[InsertDataStageEntry]",
								"storedProcedureParameters": {
									"DatasetID": {
										"value": {
											"value": "@{item().DatasetID}",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"Partition_String": {
										"value": {
											"value": "@{item().Target_Partition}",
											"type": "Expression"
										},
										"type": "String"
									},
									"Row_Count": {
										"value": "0",
										"type": "Int64"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "Metadataengine",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			}
		],
		"parameters": {
			"DataSetType": {
				"type": "string"
			},
			"RunGroupCode": {
				"type": "string"
			}
		},
		"folder": {
			"name": "MetadataEngine/ParentPipelines"
		},
		"annotations": [],
		"lastPublishTime": "2021-01-13T20:59:46Z"
	},
	"type": "Microsoft.Synapse/workspaces/pipelines"
}